plugins {
  id 'java'
  id 'org.springframework.boot' version '2.6.14'
  id 'io.spring.dependency-management' version '1.0.15.RELEASE'
  id 'io.qameta.allure' version '2.11.0'
}

subprojects {

  apply plugin: 'java'
  apply plugin: 'org.springframework.boot'
  apply plugin: 'io.spring.dependency-management'

  repositories {
    mavenCentral()
  }

  dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-test'

    implementation 'org.junit.platform:junit-platform-suite:1.9.2'
    implementation 'org.junit.platform:junit-platform-suite-api:1.9.2'
    implementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    implementation 'org.junit.jupiter:junit-jupiter-engine:5.9.2'

    implementation 'com.codeborne:selenide:5.24.2'
    implementation 'io.cucumber:cucumber-java:7.11.1'
    implementation 'io.cucumber:cucumber-junit-platform-engine:7.11.1'
    implementation 'io.cucumber:cucumber-spring:7.11.1'

    implementation "io.qameta.allure:allure-selenide:2.19.0"
    implementation 'io.qameta.allure:allure-cucumber7-jvm:2.19.0'
    implementation "org.assertj:assertj-core:3.20.2"

    implementation "ch.qos.logback:logback-core"
    implementation "ch.qos.logback:logback-classic"
  }

  test {
    // Use junit platform for unit tests
    useJUnitPlatform()
    systemProperty("cucumber.junit-platform.naming-strategy", "long")
    // OPTIONAL: Ignore test failures so that build pipelines won't get blocked by failing examples/scenarios
    ignoreFailures = true
    // OPTIONAL: Copy all system properties from the command line (-D...) to the test environment
    systemProperties(project.gradle.startParameter.systemPropertiesArgs)
  }

  sourceCompatibility = JavaVersion.VERSION_11
  targetCompatibility = JavaVersion.VERSION_11

}
